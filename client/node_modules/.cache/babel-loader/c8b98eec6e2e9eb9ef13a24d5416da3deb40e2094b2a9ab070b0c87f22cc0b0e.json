{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar _detectNode = require('detect-node');\nvar _detectNode2 = _interopRequireDefault(_detectNode);\nvar _getDimensions = require('../get-dimensions');\nvar _getDimensions2 = _interopRequireDefault(_getDimensions);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n/**\n * Create a handler for responsive functionalities.\n * @param  {Object} depencencies - Depencencies.\n * @param  {Function} depencencies.getTheme - Inject the theme settings.\n * @param  {Function} depencencies.getDimensions - Inject the get dimensions tool.\n * @return {Object} - Handler.\n */\nexports.default = function (depencencies) {\n  var deps = _extends({\n    getTheme: function getTheme() {\n      return {};\n    },\n    getDimensions: _getDimensions2.default\n  }, depencencies);\n  return {\n    /**\n     * Get the current responsive stats.\n     * @return {Object} { small: Boolean, medium: Boolean, large: Boolean }\n     */\n    get: function get() {\n      var theme = deps.getTheme();\n      var _deps$getDimensions = deps.getDimensions(),\n        width = _deps$getDimensions.width;\n      var _theme$responsive = theme.responsive,\n        small = _theme$responsive.small,\n        medium = _theme$responsive.medium,\n        large = _theme$responsive.large;\n      if (width <= small) {\n        return {\n          small: true,\n          status: 'small'\n        };\n      } else if (width <= medium) {\n        return {\n          medium: true,\n          status: 'medium'\n        };\n      } else if (width <= large) {\n        return {\n          large: true,\n          status: 'large'\n        };\n      }\n      return {\n        xlarge: true,\n        status: 'xlarge'\n      };\n    },\n    /**\n     * Register a on resize window callback to know when the current browser viewport\n     * dimentions make the breakpoint change.\n     * @param  {Function} callback - It's called on every change on the breakpoint\n     * and receives and object defining the current viewport size.\n     * @return {Function} The event listener.\n     */\n    on: function on(callback) {\n      var _this = this;\n      var current = this.get();\n      var state = current.status;\n      var onChange = function onChange() {\n        var stats = _this.get();\n        if (stats.status !== state) {\n          callback(stats);\n          state = stats.status;\n        }\n      };\n      if (!_detectNode2.default) {\n        window.addEventListener('resize', onChange, false);\n      }\n      return onChange;\n    },\n    /**\n     * Turns off a window on resize callback previously created.\n     * @param  {Function} - The event callback.\n     */\n    off: function off(onChange) {\n      if (!_detectNode2.default) {\n        window.removeEventListener('resize', onChange, false);\n      }\n    }\n  };\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_detectNode","require","_detectNode2","_interopRequireDefault","_getDimensions","_getDimensions2","obj","__esModule","default","depencencies","deps","getTheme","getDimensions","get","theme","_deps$getDimensions","width","_theme$responsive","responsive","small","medium","large","status","xlarge","on","callback","_this","current","state","onChange","stats","window","addEventListener","off","removeEventListener"],"sources":["/Users/jonavdullahu/Desktop/Programim/NASA-PROJECT/client/node_modules/arwes/lib/tools/createResponsive/index.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _detectNode = require('detect-node');\n\nvar _detectNode2 = _interopRequireDefault(_detectNode);\n\nvar _getDimensions = require('../get-dimensions');\n\nvar _getDimensions2 = _interopRequireDefault(_getDimensions);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Create a handler for responsive functionalities.\n * @param  {Object} depencencies - Depencencies.\n * @param  {Function} depencencies.getTheme - Inject the theme settings.\n * @param  {Function} depencencies.getDimensions - Inject the get dimensions tool.\n * @return {Object} - Handler.\n */\nexports.default = function (depencencies) {\n  var deps = _extends({\n    getTheme: function getTheme() {\n      return {};\n    },\n    getDimensions: _getDimensions2.default\n  }, depencencies);\n  return {\n\n    /**\n     * Get the current responsive stats.\n     * @return {Object} { small: Boolean, medium: Boolean, large: Boolean }\n     */\n    get: function get() {\n\n      var theme = deps.getTheme();\n\n      var _deps$getDimensions = deps.getDimensions(),\n          width = _deps$getDimensions.width;\n\n      var _theme$responsive = theme.responsive,\n          small = _theme$responsive.small,\n          medium = _theme$responsive.medium,\n          large = _theme$responsive.large;\n\n\n      if (width <= small) {\n        return { small: true, status: 'small' };\n      } else if (width <= medium) {\n        return { medium: true, status: 'medium' };\n      } else if (width <= large) {\n        return { large: true, status: 'large' };\n      }\n\n      return { xlarge: true, status: 'xlarge' };\n    },\n\n\n    /**\n     * Register a on resize window callback to know when the current browser viewport\n     * dimentions make the breakpoint change.\n     * @param  {Function} callback - It's called on every change on the breakpoint\n     * and receives and object defining the current viewport size.\n     * @return {Function} The event listener.\n     */\n    on: function on(callback) {\n      var _this = this;\n\n      var current = this.get();\n      var state = current.status;\n\n      var onChange = function onChange() {\n        var stats = _this.get();\n        if (stats.status !== state) {\n          callback(stats);\n          state = stats.status;\n        }\n      };\n\n      if (!_detectNode2.default) {\n        window.addEventListener('resize', onChange, false);\n      }\n\n      return onChange;\n    },\n\n\n    /**\n     * Turns off a window on resize callback previously created.\n     * @param  {Function} - The event callback.\n     */\n    off: function off(onChange) {\n      if (!_detectNode2.default) {\n        window.removeEventListener('resize', onChange, false);\n      }\n    }\n  };\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}