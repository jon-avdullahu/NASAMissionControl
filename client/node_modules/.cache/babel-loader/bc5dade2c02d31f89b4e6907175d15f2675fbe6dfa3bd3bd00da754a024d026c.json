{"ast":null,"code":"import{useCallback,useEffect,useState}from\"react\";import{httpGetLaunches,httpSubmitLaunch,httpAbortLaunch}from'./requests';function useLaunches(onSuccessSound,onAbortSound,onFailureSound){const[launches,saveLaunches]=useState([]);const[isPendingLaunch,setPendingLaunch]=useState(false);const getLaunches=useCallback(async()=>{const fetchedLaunches=await httpGetLaunches();saveLaunches(fetchedLaunches);},[]);useEffect(()=>{getLaunches();},[getLaunches]);const submitLaunch=useCallback(async e=>{e.preventDefault();// setPendingLaunch(true);\nconst data=new FormData(e.target);const launchDate=new Date(data.get(\"launch-day\"));const mission=data.get(\"mission-name\");const rocket=data.get(\"rocket-name\");const target=data.get(\"planets-selector\");const response=await httpSubmitLaunch({launchDate,mission,rocket,target});// TODO: Set success based on response.\nconst success=false;if(success){getLaunches();setTimeout(()=>{setPendingLaunch(false);onSuccessSound();},800);}else{onFailureSound();}},[getLaunches,onSuccessSound,onFailureSound]);const abortLaunch=useCallback(async id=>{const response=await httpAbortLaunch(id);// TODO: Set success based on response.\nconst success=false;if(success){getLaunches();onAbortSound();}else{onFailureSound();}},[getLaunches,onAbortSound,onFailureSound]);return{launches,isPendingLaunch,submitLaunch,abortLaunch};}export default useLaunches;","map":{"version":3,"names":["useCallback","useEffect","useState","httpGetLaunches","httpSubmitLaunch","httpAbortLaunch","useLaunches","onSuccessSound","onAbortSound","onFailureSound","launches","saveLaunches","isPendingLaunch","setPendingLaunch","getLaunches","fetchedLaunches","submitLaunch","e","preventDefault","data","FormData","target","launchDate","Date","get","mission","rocket","response","success","setTimeout","abortLaunch","id"],"sources":["/Users/jonavdullahu/Desktop/Programim/NASA-PROJECT/client/src/hooks/useLaunches.js"],"sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\n\nimport {\n  httpGetLaunches,\n  httpSubmitLaunch,\n  httpAbortLaunch,\n} from './requests';\n\nfunction useLaunches(onSuccessSound, onAbortSound, onFailureSound) {\n  const [launches, saveLaunches] = useState([]);\n  const [isPendingLaunch, setPendingLaunch] = useState(false);\n\n  const getLaunches = useCallback(async () => {\n    const fetchedLaunches = await httpGetLaunches();\n    saveLaunches(fetchedLaunches);\n  }, []);\n\n  useEffect(() => {\n    getLaunches();\n  }, [getLaunches]);\n\n  const submitLaunch = useCallback(async (e) => {\n    e.preventDefault();\n    // setPendingLaunch(true);\n    const data = new FormData(e.target);\n    const launchDate = new Date(data.get(\"launch-day\"));\n    const mission = data.get(\"mission-name\");\n    const rocket = data.get(\"rocket-name\");\n    const target = data.get(\"planets-selector\");\n    const response = await httpSubmitLaunch({\n      launchDate,\n      mission,\n      rocket,\n      target,\n    });\n\n    // TODO: Set success based on response.\n    const success = false;\n    if (success) {\n      getLaunches();\n      setTimeout(() => {\n        setPendingLaunch(false);\n        onSuccessSound();\n      }, 800);\n    } else {\n      onFailureSound();\n    }\n  }, [getLaunches, onSuccessSound, onFailureSound]);\n\n  const abortLaunch = useCallback(async (id) => {\n    const response = await httpAbortLaunch(id);\n\n    // TODO: Set success based on response.\n    const success = false;\n    if (success) {\n      getLaunches();\n      onAbortSound();\n    } else {\n      onFailureSound();\n    }\n  }, [getLaunches, onAbortSound, onFailureSound]);\n\n  return {\n    launches,\n    isPendingLaunch,\n    submitLaunch,\n    abortLaunch,\n  };\n}\n\nexport default useLaunches;"],"mappings":"AAAA,OAASA,WAAW,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAExD,OACEC,eAAe,CACfC,gBAAgB,CAChBC,eAAe,KACV,YAAY,CAEnB,QAAS,CAAAC,WAAWA,CAACC,cAAc,CAAEC,YAAY,CAAEC,cAAc,CAAE,CACjE,KAAM,CAACC,QAAQ,CAAEC,YAAY,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAC7C,KAAM,CAACU,eAAe,CAAEC,gBAAgB,CAAC,CAAGX,QAAQ,CAAC,KAAK,CAAC,CAE3D,KAAM,CAAAY,WAAW,CAAGd,WAAW,CAAC,SAAY,CAC1C,KAAM,CAAAe,eAAe,CAAG,KAAM,CAAAZ,eAAe,CAAC,CAAC,CAC/CQ,YAAY,CAACI,eAAe,CAAC,CAC/B,CAAC,CAAE,EAAE,CAAC,CAENd,SAAS,CAAC,IAAM,CACda,WAAW,CAAC,CAAC,CACf,CAAC,CAAE,CAACA,WAAW,CAAC,CAAC,CAEjB,KAAM,CAAAE,YAAY,CAAGhB,WAAW,CAAC,KAAO,CAAAiB,CAAC,EAAK,CAC5CA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB;AACA,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAAC,QAAQ,CAACH,CAAC,CAACI,MAAM,CAAC,CACnC,KAAM,CAAAC,UAAU,CAAG,GAAI,CAAAC,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAC,YAAY,CAAC,CAAC,CACnD,KAAM,CAAAC,OAAO,CAAGN,IAAI,CAACK,GAAG,CAAC,cAAc,CAAC,CACxC,KAAM,CAAAE,MAAM,CAAGP,IAAI,CAACK,GAAG,CAAC,aAAa,CAAC,CACtC,KAAM,CAAAH,MAAM,CAAGF,IAAI,CAACK,GAAG,CAAC,kBAAkB,CAAC,CAC3C,KAAM,CAAAG,QAAQ,CAAG,KAAM,CAAAvB,gBAAgB,CAAC,CACtCkB,UAAU,CACVG,OAAO,CACPC,MAAM,CACNL,MACF,CAAC,CAAC,CAEF;AACA,KAAM,CAAAO,OAAO,CAAG,KAAK,CACrB,GAAIA,OAAO,CAAE,CACXd,WAAW,CAAC,CAAC,CACbe,UAAU,CAAC,IAAM,CACfhB,gBAAgB,CAAC,KAAK,CAAC,CACvBN,cAAc,CAAC,CAAC,CAClB,CAAC,CAAE,GAAG,CAAC,CACT,CAAC,IAAM,CACLE,cAAc,CAAC,CAAC,CAClB,CACF,CAAC,CAAE,CAACK,WAAW,CAAEP,cAAc,CAAEE,cAAc,CAAC,CAAC,CAEjD,KAAM,CAAAqB,WAAW,CAAG9B,WAAW,CAAC,KAAO,CAAA+B,EAAE,EAAK,CAC5C,KAAM,CAAAJ,QAAQ,CAAG,KAAM,CAAAtB,eAAe,CAAC0B,EAAE,CAAC,CAE1C;AACA,KAAM,CAAAH,OAAO,CAAG,KAAK,CACrB,GAAIA,OAAO,CAAE,CACXd,WAAW,CAAC,CAAC,CACbN,YAAY,CAAC,CAAC,CAChB,CAAC,IAAM,CACLC,cAAc,CAAC,CAAC,CAClB,CACF,CAAC,CAAE,CAACK,WAAW,CAAEN,YAAY,CAAEC,cAAc,CAAC,CAAC,CAE/C,MAAO,CACLC,QAAQ,CACRE,eAAe,CACfI,YAAY,CACZc,WACF,CAAC,CACH,CAEA,cAAe,CAAAxB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}