{"ast":null,"code":"function createBroadcast(initialState) {\n  var listeners = {};\n  var id = 1;\n  var _state = initialState;\n  function getState() {\n    return _state;\n  }\n  function setState(state) {\n    _state = state;\n    var keys = Object.keys(listeners);\n    var i = 0;\n    var len = keys.length;\n    for (; i < len; i++) {\n      // if a listener gets unsubscribed during setState we just skip it\n      if (listeners[keys[i]]) {\n        listeners[keys[i]](state);\n      }\n    }\n  }\n\n  // subscribe to changes and return the subscriptionId\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('listener must be a function.');\n    }\n    var currentId = id;\n    listeners[currentId] = listener;\n    id += 1;\n    return currentId;\n  }\n\n  // remove subscription by removing the listener function\n  function unsubscribe(id) {\n    delete listeners[id];\n  }\n  return {\n    getState: getState,\n    setState: setState,\n    subscribe: subscribe,\n    unsubscribe: unsubscribe\n  };\n}\nexport default createBroadcast;","map":{"version":3,"names":["createBroadcast","initialState","listeners","id","_state","getState","setState","state","keys","Object","i","len","length","subscribe","listener","Error","currentId","unsubscribe"],"sources":["/Users/jonavdullahu/Desktop/Programim/NASA-PROJECT/client/node_modules/brcast/dist/brcast.es.js"],"sourcesContent":["function createBroadcast (initialState) {\n  var listeners = {};\n  var id = 1;\n  var _state = initialState;\n\n  function getState () {\n    return _state\n  }\n\n  function setState (state) {\n    _state = state;\n    var keys = Object.keys(listeners);\n    var i = 0;\n    var len = keys.length;\n    for (; i < len; i++) {\n      // if a listener gets unsubscribed during setState we just skip it\n      if (listeners[keys[i]]) { listeners[keys[i]](state); }\n    }\n  }\n\n  // subscribe to changes and return the subscriptionId\n  function subscribe (listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('listener must be a function.')\n    }\n    var currentId = id;\n    listeners[currentId] = listener;\n    id += 1;\n    return currentId\n  }\n\n  // remove subscription by removing the listener function\n  function unsubscribe (id) {\n    delete listeners[id];\n  }\n\n  return { getState: getState, setState: setState, subscribe: subscribe, unsubscribe: unsubscribe }\n}\n\nexport default createBroadcast;\n"],"mappings":"AAAA,SAASA,eAAeA,CAAEC,YAAY,EAAE;EACtC,IAAIC,SAAS,GAAG,CAAC,CAAC;EAClB,IAAIC,EAAE,GAAG,CAAC;EACV,IAAIC,MAAM,GAAGH,YAAY;EAEzB,SAASI,QAAQA,CAAA,EAAI;IACnB,OAAOD,MAAM;EACf;EAEA,SAASE,QAAQA,CAAEC,KAAK,EAAE;IACxBH,MAAM,GAAGG,KAAK;IACd,IAAIC,IAAI,GAAGC,MAAM,CAACD,IAAI,CAACN,SAAS,CAAC;IACjC,IAAIQ,CAAC,GAAG,CAAC;IACT,IAAIC,GAAG,GAAGH,IAAI,CAACI,MAAM;IACrB,OAAOF,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;MACnB;MACA,IAAIR,SAAS,CAACM,IAAI,CAACE,CAAC,CAAC,CAAC,EAAE;QAAER,SAAS,CAACM,IAAI,CAACE,CAAC,CAAC,CAAC,CAACH,KAAK,CAAC;MAAE;IACvD;EACF;;EAEA;EACA,SAASM,SAASA,CAAEC,QAAQ,EAAE;IAC5B,IAAI,OAAOA,QAAQ,KAAK,UAAU,EAAE;MAClC,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;IACjD;IACA,IAAIC,SAAS,GAAGb,EAAE;IAClBD,SAAS,CAACc,SAAS,CAAC,GAAGF,QAAQ;IAC/BX,EAAE,IAAI,CAAC;IACP,OAAOa,SAAS;EAClB;;EAEA;EACA,SAASC,WAAWA,CAAEd,EAAE,EAAE;IACxB,OAAOD,SAAS,CAACC,EAAE,CAAC;EACtB;EAEA,OAAO;IAAEE,QAAQ,EAAEA,QAAQ;IAAEC,QAAQ,EAAEA,QAAQ;IAAEO,SAAS,EAAEA,SAAS;IAAEI,WAAW,EAAEA;EAAY,CAAC;AACnG;AAEA,eAAejB,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}